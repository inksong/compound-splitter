licence()
license()
library("RCurl");   # Technically not needed since ROAuth imports this, too
library("rjson");
library("ROAuth");
install.packages("RCurl")
install.packages("rjson")
install.packages("ROAuth")
library("RCurl");   # Technically not needed since ROAuth imports this, too
library("rjson");
library("ROAuth");
reqURL <- "https://openpaths.cc/api/1"
accessURL <- "https://openpaths.cc/api/1"
authURL <- "https://openpaths.cc/api/1"
cKey <- "P54PA6YVAKBI2GSTT47HL3YOJWYITS5Z446RHOTPG53M2DBRT4MQ"
cSecret <- "CKZ3NX7C71J9NVH3DYN0KZQ55QZSEBWCN8OV0KC17KJ94A58FJ74PIHCEA1PDOGQ"
credentials <- OAuthFactory$new(consumerKey=cKey,consumerSecret=cSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL,needsVerifier=FALSE)
credentials$handshake()
credentials <- OAuthFactory$new(consumerKey=cKey,consumerSecret=cSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL,needsVerifier=FALSE,signatureMethod="HMAC-SHA1")
credentials <- OAuthFactory$new(consumerKey=cKey,consumerSecret=cSecret,requestURL=reqURL,accessURL=accessURL,authURL=authURL,needsVerifier=FALSE,oauth_signature_method="HMAC-SHA1")
numbers <- c(54,1,2,9,9,11,7,2,2,1,1)
labels <- c("WordsTogether","not ungrammatical","missing articles/pronouns", "punctuation", "capitalisation", "multiple sentences mashed together", "heading in text", "cut-off at the beginning", "should be incomplete_sentence", "link in text")
numbers <- c(54,2,2,9,9,11,7,2,2,1)
pie(numbers,labels = labels, main="Subtypes of ungrammaticality")
bar(numbers,labels=labels, main="Subtypes of ungrammaticality")
barplot(numbers,labels=labels, main="Subtypes of ungrammaticality")
stacknums <- table(54,2,2,9,9,11,7,2,2,1)
stacknums <- table(54,2,2,9,9,11,7,2,2,1)
stacknums <- table(54,2,2,9,9,11,7,2,2,1)
barplot(stacknums,main="Subtypes of ungrammaticality")
barplot(numbers,main="Subtypes of ungrammaticality")
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(20))
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(10))
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13))
names(numbers) <- labels
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13))
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=0)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2,space=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2,space=0)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2,space=-1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2,space=-0.1)
labels
labels <- c("WordsTogether","not ungrammatical","missing articles/pronouns", "punctuation", "capitalisation", "multiple sentences", "heading", "cut-off at beginning", "incomplete", "link")
names(numbers) <- labels
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2,space=-0.1)
labels <- c("1","2","3", "4", "5", "5", "6", "7", "8", "9")
names(numbers) <- labels
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),las=2,space=-0.1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),space=-0.1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13),space=-0.1, las=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1)
labels <- c("A","B","C", "D", "E", "F", "G", "H", "I", "J")
names(numbers) <- labels
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1)
numbers
numbers <- c(54,2,2,9,9,11,7,4)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1)
names(numbers) <- labels
labels <- c("A","B","C", "D", "E", "F", "G", "H", "I")
names(numbers) <- labels
labels <- c("A","B","C", "D", "E", "F", "G", "H")
names(numbers) <- labels
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1)
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1, ylab="number of occurences")
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1, ylab="subtype")
barplot(numbers,main="Subtypes of ungrammaticality",col=rainbow(13), las=1, ylab="number of occurences",xlab="subtype")
numbers <- c(74,30,26,15,13,12,8,6,2,2)
labels <- c("A","B","C", "D", "E", "F", "G", "H", "I", "J")
names(numbers) <- labels
barplot(numbers,main="Frequency of subtypes of ungrammaticality in dev-2",col=rainbow(13), las=1, ylab="number of occurences",xlab="subtype")
barplot(numbers,main="Subtypes of ungrammaticality in dev-2",col=rainbow(13), las=1, ylab="number of occurences",xlab="subtype")
numbers <- c(74,30,26,15,13,12,8,6,4)
labels <- c("A","B","C", "D", "E", "F", "G", "H", "I")
names(numbers) <- labels
barplot(numbers,main="Subtypes of ungrammaticality in dev-2",col=rainbow(13), las=1, ylab="number of occurences",xlab="subtype")
cite()
cite(R)
cite
cite(ggplot2)
library(ggplot2)
cite(ggplot2)
citation()
citation(ggplot2)
citation("ggplot2")
x <- read.table("immigration.csv",sep=",")
x
hist(x)
hist(x$2)
hist(x$V2)
import ggplot2
import ggplot
import
library(ggplot2)
p <- ggplot(data = x)
p
x
max(x)
max(x$V2)
max(x,key=$V2)
max(x,key=V2)
max(x,key=)
sort(x)
sort(x$V2)
sort(x,order(x$V2))
sort(x,order(x$V2,decreasing=decreasing))
sort(x,order(x$V2,decreasing=1))
sort(x,order(x$V2))
sort(x)
x
order(x)
order(x,V2)
order(x)
x
order(x)
y=x[order(V2)]
y=x[order()]
y
y=x[order(x)]
y=x[order(x$V2)]
y=x[order(V2)]
help(anova)
learning <-
;
getcwd()
getwd()
learning <- read.csv("learning.csv")
model <- lm(learning)
anova(model)
anova(learning)
anova(glm(learning))
summary(learning)
-1*7+-1*6.9-11+4*13.4-12
7+6.9+11+13.4+12
(7+6.9+11+13.4+12)/5
16.7-((7+6.9+11+13.4+12)/5)
counting
learning$counting
learning$counting + learning$rhyming
learning$counting ^ learning$rhyming
(16.7)^2
(16.7)^2 / 2
3*7 + -1*6.9 + -1*11 + 0*13.4 + -1*12
(-8.9)^2/(12/10)
0*7 + -1*6.9 + 2*11 + 0*13.4 + -1*12
(3.1^2)/(6/10)
0*7 + 1*6.9 + 0*11 + 0*13.4 + -1*12
(5.1^2)/(2/10)
139.445 + 66.00833 + 16.01667 + 130.05
SSB <- 139.445 + 66.00833 + 16.01667 + 130.05
SSW <- 435.3
SSB
SSB, SSW
SSB; SSW
SSB / 4
SSW / 45
MSB <- SSB / 4
MSW <- SSW / 45
MSB / MSW
MSW
139.445 / MSW
66.008 / MSW
16.016 / MSW
130.05 / MSW
license()
x = 1,2,3,4,5;
x = (1,2,3,4,5)
x = (1 2 3 4 5)
x = (1 2 3 4 5)
x = [1,2,3,4,5]
c = 1
c = (1;2)
stacknums
learning
x = c(1,2,3)
x = c(1,2,2,2,2,2,2,2,2,2,2,4,5,6,6,3,5,64,3,99)
boxplot(x)
x = c(1,2,2,2,2,2,2,2,2,2,2,4,5,6,6,3,5,3)
boxplot(x)
x = c(1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,4,5,6,6,3,5,3)
boxplot(x)
x = c(1,2,2,2,2,2,2,2,2,2,2,4,5,6,6,3,5,3)
boxplot(x)
x = c(1,2,3,3,3,3,3,3,3,3,2,4,5,6,6,3,5,3)
boxplot(x)
mean(x)
d <- data.frame(x= 2012:2015,
y = c(3.895, 6.863, 8.997, 10.626))
library("ggplot2"); theme_set(theme_bw())
ggplot(d,aes(x,y))+ geom_point() +
geom_smooth(method="lm",formula=y~poly(x,2))
data(wonderland)
install.package(wonderland)
install.packages(wonderland)
install.packages(LSAfun)
install.packages(lsa)
install.packages("lsa")
install.packages("LSAfun")
data(wonderland)
library(LSAfun)
library(lsa)
library(SnowballC)
library(rgl)
install.packages("rgl")
library(rgl)
library(LSAfun)
install.packages("rgl")
library("/var/folders/ck/s38sycld0tvgb5qhmqtf750r0000gn/T//RtmpzYirnx/downloaded_packages")
dataset(wonderland)
data(wonderland)
data
wonderland
library(LSAfun)
remove.packages("rgl")
remove.packages("rgl")
install.packages("rgl")
library(rgl)
grap <- readline("Enter ingredient name: ")
grap
install.packages(syuzhet)
install.packages('syuzhet')
library(syuzhet)
library(syuzhet)
Sys
Sys.setlocale("LC_ALL","en_us.UTF-8")
Sys.setlocale("LANG","en_us.UTF-8")
Sys.setlocale(LANG=en_us.UTF-8")
""
Sys.setlocale(LANG="en_us.UTF-8")
x <- "Caterina Guonçallvez braçeyro "
regexec('(([A-Z][\w\[\]-]+|de|d\[e\])\s?)+', x)
regexec('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+',x)
x
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+',x, value=T)
regexec('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, value=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, value=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', c("Hey", x), value=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', c("Hey", x), perl=T, value=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, perl=T, value=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, perl=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, perl=T, value=T)
?greq
?grep
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, perl=T, value=T, fixed=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, perl=T, value=T)
grep('(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+', x, perl=T)
library(stringr)
str_match(x, '(([A-Z][\\w\\[\\]-]+|de|d\\[e\\])\\s?)+')
1und1 <- read.csv("1und1.csv")
einsundeins <- read.csv("1und1.csv")
library(ggplot2)
ggplot(einsundeins)
ggplot(einsundeins, aes(x=ms,y=frequency))
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_line()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_line() + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_point() + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar() + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = frequency) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = ) + scale_y_log10()
?geom_bar
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = "identity") + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = "identity", binwidth = 10) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = "identity", width = 10) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = "identity", width = 10)
ggplot(einsundeins, aes(x=ms,y=frequency)) + geom_bar(stat = "identity", width = 10) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency,color=frequency)) + geom_bar(stat = "identity", width = 10) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency,color=frequency)) + geom_histogram()
ggplot(einsundeins, aes(x=ms,y=frequency,color=frequency)) + geom_histogram(stat=identity)
ggplot(einsundeins, aes(x=ms,y=frequency,color=frequency)) + geom_histogram(stat="identity")
ggplot(einsundeins, aes(x=ms,y=frequency,color=frequency)) + geom_histogram(stat="identity", binwidth = 10)
ggplot(einsundeins, aes(x=ms,y=frequency,color=frequency)) + geom_bar(stat = "identity", width = 10) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency,color=ms)) + geom_bar(stat = "identity", width = 10) + scale_y_log10()
ggplot(einsundeins, aes(x=ms,y=frequency,color=ms)) + geom_bar(stat = "identity", width = 10)
ggplot(einsundeins, aes(x=ms,y=frequency,color=ms)) + geom_smooth()
einshist <- read.table("1und1.hist")
ggplot(einshist) + geom_histogram()
ggplot(einshist) + geom_bar
ggplot(einshist) + geom_bar()
ggplot(einshist, aes(x=$1)) + geom_bar()
ggplot(einshist, aes(x=V1)) + geom_bar()
ggplot(einshist, aes(x=V1)) + geom_bar() + scale_x_log10()
ggplot(einshist, aes(x=V1)) + geom_hist() + scale_x_log10()
ggplot(einshist, aes(x=V1)) + geom_histogram() + scale_x_log10()
ggplot(einshist, aes(x=V1)) + geom_histogram(binwidth = 10) + scale_x_log10()
ggplot(einshist, aes(x=V1)) + geom_histogram() + scale_x_log10()
ggplot(einshist, aes(x=V1,color=ms)) + geom_histogram() + scale_x_log10()
ggplot(einshist, aes(x=V1,color=V1)) + geom_histogram() + scale_x_log10()
ggplot(einshist, aes(x=V1,color=V1)) + geom_histogram(bins=10) + scale_x_log10()
ggplot(einshist, aes(x=V1,color=V1)) + geom_histogram(bins=50) + scale_x_log10()
ggplot(einshist, aes(x=V1,color=V1)) + geom_histogram(bins=70) + scale_x_log10()
ggplot(einshist, aes(x=V1,color=V1)) + geom_histogram(bins=100) + scale_x_log10()
setwd("thesis/tools/new_splitter_own/lex")
getwd()
ls
ls()
data <- read.csv("sizes.csv")
data
library(ggplot2)
head(data)
summary(data)
ggplot(data, aes(x=size,y=count,color=language)) + geom_density()
ggplot(data, aes(x=size,y=count,color=language)) + geom_hist()
ggplot(data, aes(x=size,y=count,color=language)) + geom_histogram()
ggplot(data, aes(x=size,y=count,color=language)) + geom_lines()
ggplot(data, aes(x=size,y=count,color=language)) + geom_line()
ggplot(data, aes(x=size,y=count,color=language)) + geom_fill()
ggplot(data, aes(x=size,y=count,color=language)) + geom_line(fill="gear")
ggplot(data, aes(x=size,y=count,color=language)) + geom_point() + geom_line()
ggplot(data, aes(x=size,y=count,color=language)) + geom_line()
ggplot(data, aes(x=size,y=count,color=language)) + geom_line() + geom_smooth()
ggplot(data, aes(x=size,y=count,color=language)) + geom_line()
data <- read.csv("sizes.csv")
ggplot(data, aes(x=size,y=count,color=language)) + geom_line()
ggplot(data, aes(x=size,y=count,color=language)) + geom_line() + labs(x="word length", y="# tokens", color="Language")
ggplot(data, aes(x=size,y=count,shape=language)) + geom_line() + labs(x="word length", y="# tokens", color="Language")
ggplot(data, aes(x=size,y=count,linetype=language)) + geom_line() + labs(x="word length", y="# tokens", linetype="Language")
